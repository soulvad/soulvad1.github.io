{"ast":null,"code":"var _jsxFileName = \"D:\\\\NULP\\\\SEM4\\\\labs\\\\\\u0412\\u0435\\u0431\\\\soulvad1.github.io\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const auth = getAuth();\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, [auth]);\n  const register = async (email, password) => {\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const value = {\n    currentUser,\n    loading,\n    register,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","auth","unsubscribe","user","register","email","password","error","login","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/NULP/SEM4/labs/Веб/soulvad1.github.io/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { \n  getAuth, \n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  User\n} from 'firebase/auth';\n\ninterface AuthContextType {\n  currentUser: User | null;\n  loading: boolean;\n  register: (email: string, password: string) => Promise<void>;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const auth = getAuth();\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, [auth]);\n\n  const register = async (email: string, password: string) => {\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const login = async (email: string, password: string) => {\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const value = {\n    currentUser,\n    loading,\n    register,\n    login,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SACEC,OAAO,EACPC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,EACPC,kBAAkB,QAEb,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUvB,MAAMC,WAAW,gBAAGX,aAAa,CAAyB,IAAI,CAAC;AAE/D,OAAO,MAAMY,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGb,UAAU,CAACU,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACrF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAc,IAAI,CAAC;EACjE,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMqB,IAAI,GAAGnB,OAAO,CAAC,CAAC;EAEtBD,SAAS,CAAC,MAAM;IACd,MAAMqB,WAAW,GAAGhB,kBAAkB,CAACe,IAAI,EAAGE,IAAI,IAAK;MACrDL,cAAc,CAACK,IAAI,CAAC;MACpBH,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAEF,OAAOE,WAAW;EACpB,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;EAEV,MAAMG,QAAQ,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IAC1D,IAAI;MACF,MAAMvB,8BAA8B,CAACkB,IAAI,EAAEI,KAAK,EAAEC,QAAQ,CAAC;IAC7D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMC,KAAK,GAAG,MAAAA,CAAOH,KAAa,EAAEC,QAAgB,KAAK;IACvD,IAAI;MACF,MAAMtB,0BAA0B,CAACiB,IAAI,EAAEI,KAAK,EAAEC,QAAQ,CAAC;IACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMxB,OAAO,CAACgB,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMG,KAAK,GAAG;IACZb,WAAW;IACXE,OAAO;IACPK,QAAQ;IACRI,KAAK;IACLC;EACF,CAAC;EAED,oBACErB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAf,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAACnB,GAAA,CAnDWF,YAAqD;AAAAsB,EAAA,GAArDtB,YAAqD;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}